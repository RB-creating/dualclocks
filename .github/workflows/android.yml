name: Android APK (Buildozer)

 on:
   workflow_dispatch:
   push:
     branches: [ main ]
     tags: [ 'v*' ]

-permissions:
-  contents: read
-  actions: read
+# (Optional) Start minimal; if upload fails with 403, add `actions: write`.
+permissions:
+  contents: read
+  actions: read

 concurrency:
   group: build-apk-${{ github.ref }}
   cancel-in-progress: true

 jobs:
   build-android:
     runs-on: ubuntu-latest

     steps:
       - name: Checkout
         uses: actions/checkout@v4

       - name: Build with Buildozer
         id: buildozer
         uses: ArtemSBulgakov/buildozer-action@v1
+        env:
+          USER: root   # fix: entrypoint chowns to $USER; ensure a valid user exists in container
         with:
           workdir: .
           buildozer_version: ''  # use image's Buildozer; avoid pip+PEP 668

       - name: Verify no .kv files in APK
         if: ${{ success() }}
         shell: bash
         run: |
           set -e
           APK="${{ steps.buildozer.outputs.filename }}"
           echo "Scanning $APK ..."
           unzip -l "$APK" | grep -Ei '\.kv$' && { echo "Found .kv in APK"; exit 1; } || true
           if unzip -p "$APK" assets/private.mp3 > private.zip 2>/dev/null; then
             unzip -l private.zip | grep -Ei '\.kv$' && { echo "Found .kv in assets/private.mp3"; exit 1; } || echo "No .kv files found."
           else
             echo "No assets/private.mp3 found; skipping inner scan."
           fi

       - name: Upload APK (short retention)
         if: ${{ success() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
         uses: actions/upload-artifact@v4
         with:
           name: apk-${{ github.ref_name }}-${{ github.run_number }}
           path: ${{ steps.buildozer.outputs.filename }}
           retention-days: 3
