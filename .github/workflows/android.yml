name: Android APK (Buildozer)

on:
  workflow_dispatch: {}
  push:
    branches: [main]
    tags: ['v*']

permissions:
  contents: read
  actions: read

concurrency:
  group: build-apk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Build the APK using the Buildozer action
      - name: Build with Buildozer
        id: buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        env:
          USER: root
          # Allow pip to install into the system Python despite PEP 668:
          # The action installs Buildozer with --user.
          PIP_BREAK_SYSTEM_PACKAGES: "1"
          # Make sure we don't accidentally run a pre-activated venv
          VIRTUAL_ENV: ""
        with:
          workdir: .
          buildozer_version: stable
          # Use the same interpreter that just installed Buildozer (outside any venv)
          command: >
            which python3 || true;
            /bin/python3 -V;
            /bin/python3 -m pip --version;
            /bin/python3 -m pip show buildozer || true;
            /bin/python3 -m buildozer --version || true;
            /bin/python3 -m buildozer -v android debug

      # Ensure no KV files were packed (top-level, and inside assets/private.mp3 ZIP)
      - name: Verify no .kv files in APK
        if: ${{ success() }}
        shell: bash
        run: |
          set -e
          APK="${{ steps.buildozer.outputs.filename }}"
          echo "Scanning $APK ..."
          # 1) top-level APK
          unzip -l "$APK" | grep -Ei '\.kv$' && { echo "Found .kv in APK"; exit 1; } || true
          # 2) inner python-for-android payload (assets/private.mp3 is a ZIP)
          if unzip -p "$APK" assets/private.mp3 > private.zip 2>/dev/null; then
            unzip -l private.zip | grep -Ei '\.kv$' && { echo "Found .kv in assets/private.mp3"; rm -f private.zip; exit 1; } || echo "No .kv files found."
            rm -f private.zip
          else
            echo "No assets/private.mp3 found; skipping inner scan."
          fi

      # Upload the APK when building main or a tag; keep it only a few days
      - name: Upload APK (short retention)
        if: ${{ success() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ github.ref_name }}-${{ github.run_number }}
          path: ${{ steps.buildozer.outputs.filename }}
          retention-days: 3
