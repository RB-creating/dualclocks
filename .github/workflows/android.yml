name: Build Android (Kivy)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Diagnostics (optional but recommended) ---
      - name: Show disk & memory before build
        run: |
          echo "Disk before:"
          df -h
          echo
          echo "Memory:"
          free -h || true

      # Free up disk space on the runner (safe for our Docker-based build)
      - name: Free up disk (optional)
        run: |
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          echo "Disk after cleanup:"
          df -h

      # --- Cache the global Buildozer folder (correct path!) ---
      - name: Cache Buildozer global dir
        uses: actions/cache@v4
        with:
          path: .buildozer_global     # <-- underscore (this actually exists)
          key: buildozer-global

      # --- Build inside the Kivy Buildozer Docker action ---
      - name: Build with Buildozer (Docker action)
        id: buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        with:
          workdir: .
          buildozer_version: stable
          command: buildozer -v android debug
        env:
          # Your app settings for python-for-android/buildozer
          APP_ANDROID_ARCH: arm64-v8a
          CYTHONIZE: "1"
          P4A_LOG_LEVEL: DEBUG

          # IMPORTANT: Use the JDK path INSIDE the container
          JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

          # If Gradle ever OOMs, uncomment the next line:
          # GRADLE_OPTS: "-Xmx4g"

      # Files generated by the container may be owned by root; fix ownership
      - name: Fix workspace ownership
        if: always()
        run: sudo chown -R "$USER:$USER" .

      # Upload any APKs directly (nice single-click download if present)
      - name: Upload APK(s)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
          if-no-files-found: warn

      # Always bundle logs and any APKs into a single artifact so you have them every run
      - name: Bundle logs and APK (always)
        if: always()
        run: |
          set +e
          mkdir -p artifacts

          # Collect the entire .buildozer tree if it exists (best for debugging)
          if [ -d ".buildozer" ]; then
            tar -C . -czf artifacts/buildozer.tgz .buildozer || true
            echo "Packed .buildozer into artifacts/buildozer.tgz" >> artifacts/README.txt
            du -sh .buildozer >> artifacts/README.txt || true
          else
            echo "No .buildozer directory found. Build likely failed early." > artifacts/README.txt
          fi

          # Copy APKs here too (so logs artifact alone is sufficient)
          if [ -d "bin" ]; then
            cp bin/*.apk artifacts/ 2>/dev/null || true
          fi

          # Add small diagnostics so artifacts/ is never empty
          pwd > artifacts/pwd.txt
          df -h > artifacts/df.txt || true
          ls -alh > artifacts/ls.txt || true

      - name: Upload logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: artifacts
          retention-days: 7
          if-no-files-found: warn
